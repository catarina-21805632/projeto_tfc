FROM debian:buster

LABEL maintainer="drigoor"

RUN ln -sf /usr/share/zoneinfo/Portugal /etc/localtime && \
    apt-get update && \
    apt-get install -y -qq --no-install-recommends \
        curl \
        ca-certificates \
        bzip2 \
        make && \
    apt-get -y autoremove --purge && \
    apt-get -y clean && \
    rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

ARG SBCL_VERSION

RUN curl -O -L https://downloads.sourceforge.net/project/sbcl/sbcl/${SBCL_VERSION}/sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 && \
    bzip2 -cd sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2 | tar xvf - && \
    cd sbcl-${SBCL_VERSION}-x86-64-linux && \
    sh install.sh && \
    cd .. && \
    rm -rf sbcl-${SBCL_VERSION}-x86-64-linux &&\
    rm sbcl-${SBCL_VERSION}-x86-64-linux-binary.tar.bz2

# help: https://www.computerhope.com/unix/groupadd.htm
# help: https://www.computerhope.com/unix/useradd.htm
RUN groupadd -f lisp && \
    useradd -s /bin/bash -m -d /home/lisp -g lisp -c "Autogenerated lisp devel user." lisp && \
    export HOME="/home/lisp"

USER lisp

WORKDIR /home/lisp

RUN mkdir "quicklisp" && \
    curl -O https://beta.quicklisp.org/quicklisp.lisp && \
    sbcl --no-sysinit --no-userinit --non-interactive \
         --load quicklisp.lisp \
         --eval "(quicklisp-quickstart:install)" \
         --eval "(ql::without-prompting (ql:add-to-init-file))" && \
    rm quicklisp.lisp

RUN chown -R lisp:lisp quicklisp
RUN chmod 755 quicklisp

ARG PROJECT_NAME
ARG PROJECT_ROOT

COPY --chown=lisp:lisp . ${PROJECT_ROOT}

# just to add the project's dependencies (faster load times but will required rebuild of the image)
RUN sbcl --eval "(ql:quickload :${PROJECT_NAME})"

# # SLIME
# RUN echo "(ql:quickload \"swank\")" >> .sbclrc && \
#     echo "(defun start-swank () (setf swank::*loopback-interface* \"0.0.0.0\") (swank:create-server :port 4005 :style swank:*communication-style* :dont-close t))" >> .sbclrc && \
#     echo "(start-swank)" >> .sbclrc && \
#     echo "(ql:quickload :${PROJECT_NAME})" >> .sbclrc && \
#     echo "(${PROJECT_NAME}:run)" >> .sbclrc
# # in Visual Code this should be run as interactive

# SLY
RUN echo "(ql:quickload :slynk)" >> .sbclrc && \
    echo "(defun start-slynk () (setf slynk::*loopback-interface* \"0.0.0.0\") (slynk:create-server :port 4005 :dont-close t))" >> .sbclrc && \
    echo "(start-slynk)" >> .sbclrc
#     echo "(ql:quickload :${PROJECT_NAME})" >> .sbclrc && \
#     echo "(${PROJECT_NAME}:run)" >> .sbclrc
# # in Visual Code this should be run as interactive

# check this for CMD vs ENTRYPOINT: https://goinbigdata.com/docker-run-vs-cmd-vs-entrypoint/
ENTRYPOINT [ "sbcl", "--noinform", "--noprint" ]

# based on: https://gitlab.com/hineios/master-of-nil/blob/master/Dockerfile
# based on: https://gitlab.com/hineios/master-of-nil/blob/master/master-of-nil.lisp

# based on: https://github.com/fisxoj/lisp-images/blob/master/base/Dockerfile
# based on: https://github.com/daewok/lisp-devel-docker/blob/master/quicklisp/Dockerfile
